@{
    ViewData["Title"] = "Lets chat!";
}
<div class="content">
	<div class="row"><label>Users Online:&nbsp;</label><label id="usersCount"></label>
	</div>
	<div class="row chattable-row">
		<div class="col-md-2 chattable-col" id="userlist">
			<!--Sidebar content-->
			<ul id="usersOnline" class="chat-list">

			</ul>
		</div>
		<div id="tabs" class="col-md-8 chatbox">
			<ul>
				<li id="Common" class="tab"><a href="#tabs-1">Common</a></li>
			</ul>
			<div id="tabs-1">
				<div id="discussionCommon" class="chattable-col">
					<ul id="discussionCommon" class="chat-list"></ul>
				</div>
			</div>
		</div>
	</div>
	<div class="row">
		<div class="col-md-2"></div>
		<div class="col-md-8 chatbox" id="chatinput">
			<div class="form-inline">
				<textarea id="message" class="form-control" rows="1"></textarea>
				<input type="button" id="emojibutton" value="Emoji" class="btn btn-default" />
				<input type="button" id="sendmessage" value="Send" class="btn btn-default" />
				<input type="button" id="sendhpmessage" value="Send Warning" class="btn btn-default" />
				<input type="file" id="imgFile" style="display: none" />
				<input type="button" id="sendImage" value="Send Image" class="btn btn-default" />
				<input type="file" id="AudioFile" style="display: none" />
				<input type="button" id="sendAudio" value="Send Audio" class="btn btn-default" />
				<input type="file" id="VideoFile" style="display: none" />
				<input type="button" id="sendVideo" value="Send Video" class="btn btn-default" />
				<input type="file" id="avatarFile" style="display: none" />
				<input type="button" id="setAvatarBtn" value="Change Avatar" class="btn btn-default" />
				<input type="hidden" id="displayname" />
			</div>
		</div>
	</div>
</div>
@section scripts {
	<!--Script references. -->
	<!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
	<!--Reference the SignalR library. -->
	<script src="~/lib/signalr/jquery.signalR.js"></script>
	<!--Reference the autogenerated SignalR hub script. -->
	<script src="~/signalr/hubs"></script>
	<!--SignalR script to update the chat page and send messages.-->
	<script src="~/lib/audiojs/audio.min.js"></script>
	@*<script>
		audiojs.events.ready(function () {
			var as = audiojs.createAll();
		});
	</script>*@
	<script src="http://vjs.zencdn.net/5.7.1/video.js"></script>
	<link href="http://vjs.zencdn.net/5.7.1/video-js.css" rel="stylesheet">

	<!-- If you'd like to support IE8 -->
	<script src="http://vjs.zencdn.net/ie8/1.1.2/videojs-ie8.min.js"></script>
	
	<link rel="stylesheet" href="~/lib/emojiarea/jquery.emojiarea.css">
	<script src="~/lib/emojiarea/jquery.emojiarea.js"></script>
	<script src="~/lib/emojiarea/emojis.js"></script>

	<link rel="stylesheet" href="~/lib/jquery-ui/jquery-ui.min.css">
	<script src="~/lib/jquery-ui/jquery-ui.min.js"></script>
	<script src="~/lib/dateformat/date.format.js"></script>
	<script>
		$(function() {
			var refreshMessageArea = function () {
				$('div#chatinput .emoji-wysiwyg-editor').remove();
				$('#message').val('').focus();
				$('#message').emojiarea({ button: '#emojibutton' });
				// Handle submit on enter keypress
				$('div#chatinput .emoji-wysiwyg-editor').keydown(function (e) {
					var key = e.keyCode;
					if (key === 13) // the enter key code
					{
						$('#sendmessage').click();
					}
				});
			}

			refreshMessageArea();

			$("#tabs").tabs();

			var tabExists = function(user) {
				return $('div#tabs ul:first li#' + user).length > 0;
			}

			var removeActiveTab = function () {
				var activeTab = $('#tabs').tabs("option", "active") + 1;
				if (activeTab === 1) {
					alert('Cannot close common dialog');
					return;
				}

				$('div#tabs ul:first a[href=#tabs-' + activeTab + ']').parent().remove();
				$('div#tabs div[id=tabs-' + activeTab + ']').remove();
				$('#tabs').tabs("refresh");
				$('#tabs').tabs("option", "active", -1);
			}

			var refreshAvatars = function() {
				$('.avatarImg').each(function (index, element) {
					$(element).attr('src', '/Chat/Avatar/?name=' + $(element).attr('id') + '&t=' + new Date().getMilliseconds());
				});
			}

			var addTab = function(user) {
				if (tabExists(user))
					return;

				var numTabs = $('div#tabs ul li.tab').length + 1;
				$('div#tabs ul:first').append('<li id="' + user + '" class="tab"><a href="#tabs-' + numTabs + '">' + user + '</a>' +
				'<img src="/static/close.png" id="closeDialogBtn" /></li>');
				$('div#tabs').append('<div id="tabs-' + numTabs + '"><div id="discussion' + user + '" class="chattable-col">'
					+ '<ul id="discussion' + user + '" class="chat-list"></ul></div></div>');
				$('#tabs').tabs("refresh");
				$('#tabs').tabs("option", "active", -1);

				$('#closeDialogBtn').click(removeActiveTab);
			}

			var getActiveDialog = function() {
				var activeTab = $('#tabs').tabs("option", "active");
				var dialog = htmlEncode($('#tabs ul:first li').eq(activeTab).attr("id"));

				if (dialog === 'Common')
					dialog = null;

				return dialog;
			}

			var appendMessage = function(name, dialog, data) {
				if (dialog == null)
					dialog = 'Common';
				if (!tabExists(dialog))
					addTab(dialog);

				var now = new Date();
				$('#discussion' + dialog + ' ul').append(
					'<li><div class="avatarBlock"><img class="avatarImg" id="' + htmlEncode(name) + '"/></div>'
					+ '<div class="nameBlock"><strong>' + htmlEncode(name) + '</strong><br>' + data + '</div>'
					+ '<div class="timeBlock">' + dateFormat(now, "HH:MM:ss") + '</div>'
					+ '</li>');

				// Scroll to always show the most recent discussionCommon item
				$('ul#discussion' + dialog).scrollTop($('ul#discussion' + dialog)[0].scrollHeight);
				refreshAvatars();
			}

			// Reference the auto-generated proxy for the hub.
			var chat = $.connection.ChatHub;

			var emojiArea = function(message) {
				var $textarea = $('<textarea>' + htmlEncode(message) + '</textarea>');
				var $wrapper = $('<div>').append($textarea);
				$textarea.emojiarea({ button: '#null' }); // no emoji button
				$wrapper.find('.emoji-wysiwyg-editor').css('border', '0').attr('contenteditable', 'false'); // prevent edit messages
				return $wrapper.html();
			}

			chat.client.addNewMessageToPage = function(name, dialog, message) {
				appendMessage(name, dialog, emojiArea(message));
			};

			chat.client.addNewHPMessageToPage = function(name, dialog, message) {
				appendMessage(name, dialog, '<img src="/static/warning.png" />' + emojiArea(message));
			};

			chat.client.addNewImgMessageToPage = function(name, dialog, imgName) {
				appendMessage(name, dialog, '<img src="/Chat/Image/?imgName=' + htmlEncode(imgName) + '"/>');
			};

			chat.client.addNewAudioMessageToPage = function(name, dialog, audioName) {
				appendMessage(name, dialog, htmlEncode(audioName) + '<audio src="/Chat/Audio/?audio=' + htmlEncode(audioName) + '" preload="auto" />');
				audiojs.createAll();
			};

			chat.client.addNewVideoMessageToPage = function(name, dialog, videoName) {
				appendMessage(name, dialog,
					'<video id="my-video" class="video-js" controls preload="auto" width="640" height="264" data-setup="{}">' +
					'<source src="/Chat/Video/?video=' + htmlEncode(videoName) + '" type="video/mp4">' +
					'</video>');
			};

			// Get the user name and store it to prepend to messages.
			var userName = prompt('Enter your name:', '');
			$('#displayname').val(userName);

			// Set initial focus to message input box.
			$('#message').focus();

			// Create a function that the hub can call back to display user count.
			chat.client.updateUsersOnlineCount = function(count) {
				// Add the count to the page.
				$('#usersCount').text(count);
			};

			// Create a function that the hub can call back to display messages.
			chat.client.getOnlineUsers = function(data) {

				$('#usersOnline').empty();
				// Add the message to the page.
				$.each(data, function (index, value) {
					var name = htmlEncode(value);
					$('#usersOnline').append('<li class="user" id="' + name + '">'
						+ '<img class="avatarImg" id="'+name+'" src="/Chat/Avatar/?name='+name+'" />' + name + '</li>');
				});

				$('li.user').css('cursor', 'pointer').click(function() {
					addTab($(this).attr('id'));
				});
			};

			$('#setAvatarBtn').click(function () {
				$('#avatarFile').click();
			});

			$('#avatarFile').change(function () {
				if (!$(this)[0].files[0])
					return;

				var fd = new FormData();
				fd.append('name', htmlEncode($('#displayname').val()));
				fd.append('theFile', $(this)[0].files[0]);

				$.ajax({
					type: 'POST',
					url: '/Chat/AddAvatar',
					data: fd,
					processData: false,
					contentType: false,
					dataType: "json",
					success: function(data) {
						alert('Avatar was uploaded successfully');
						refreshAvatars();
					},
					error: function(data) {
						alert('Error uploading the avatar');
					}
				});
			});

			var upload = function (url, element, onSuccess) {
				if (!element)
					return;

				var fd = new FormData();
				fd.append('theFile', element);

				$.ajax({
					type: 'POST',
					url: url,
					data: fd,
					processData: false,
					contentType: false,
					dataType: "json",
					success: onSuccess,
					error: function(data) {
						alert('Error uploading the file');
					}
				});
			}

			// Start the connection.
			$.connection.hub.start().done(function() {
				chat.server.subscribe(htmlEncode($('#displayname').val()));

				$('#sendmessage').click(function() {
					var user = htmlEncode($('#displayname').val());
					var message = htmlEncode($('#message').val());
					var dialog = getActiveDialog();
					
					if (message.length > 0)
						chat.server.send(user, dialog, message);
					refreshMessageArea();
				});

				$('#sendhpmessage').click(function() {
					var user = htmlEncode($('#displayname').val());
					var message = htmlEncode($('#message').val());
					var dialog = getActiveDialog();

					if (message.length > 0)
						chat.server.sendhp(user, dialog, message);
					refreshMessageArea();
				});

				$('#imgFile').change(function() {
					var user = htmlEncode($('#displayname').val());
					var dialog = getActiveDialog();

					upload('/Chat/AddImage', $(this)[0].files[0], function (data) {
						chat.server.sendImg(user, dialog, data);
					});
				});

				$('#AudioFile').change(function () {
					var user = htmlEncode($('#displayname').val());
					var dialog = getActiveDialog();

					upload('/Chat/AddMedia', $(this)[0].files[0], function (data) {
						chat.server.sendAudio(user, dialog, data);
					});
				});

				$('#VideoFile').click(function () {
					var user = htmlEncode($('#displayname').val());
					var dialog = getActiveDialog();

					upload('/Chat/AddMedia', $(this)[0].files[0], function (data) {
						chat.server.sendVideo(user, dialog, data);
					});
				});

				$('#sendImage').click(function () {
					$('#imgFile').click();
				});

				$('#sendAudio').click(function() {
					$('#AudioFile').click();
				});

				$('#sendVideo').click(function() {
					$('#VideoFile').click();
				});
			});
		});

		// This optional function html-encodes messages for display in the page.
		function htmlEncode(value) {
			var encodedValue = $('<div />').text(value).html();
			return encodedValue;
		}
	</script>
}
